---
version: 2.1
parameters:
  poetry-version:
    type: string
    default: "1.1.13"

executors:
  linters:
    docker:
      - image: "python:3.10-alpine"
  python310:
    docker:
      - image: "cimg/python:3.10"
  python39:
    docker:
      - image: "cimg/python:3.9"
  python38:
    docker:
      - image: "cimg/python:3.8"
  python37:
    docker:
      - image: "cimg/python:3.7"

jobs:
  lint:
    parameters:
      executor_name:
        type: executor
    executor: << parameters.executor_name >>
    steps:
      - run:
          name: Install requirements
          command: |
            apk update
            apk add ruby=3.0.3-r0 go=1.17.4-r0 git=2.34.1-r0
      - run:
          name: Install pre-commit
          command: pip install pre-commit==2.17.0
      - checkout
      - run:
          name: Generate cache key
          command: |
            cp .pre-commit-config.yaml pre-commit-cache-key.txt
            python --version --version >> pre-commit-cache-key.txt
      - restore_cache:
          key: pre-commit-hooks-{{ checksum "pre-commit-cache-key.txt" }}
      - run:
          name: Install hooks
          command: pre-commit install --install-hooks
      - save_cache:
          paths:
            - ~/.cache/pre-commit
          key: pre-commit-hooks-{{ checksum "pre-commit-cache-key.txt" }}
      - run:
          name: Run linters
          command: pre-commit run --all-files
  test:
    description: Run Tests for a specific python version
    parameters:
      executor_name:
        type: executor
    executor: << parameters.executor_name >>
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install Poetry
          command: poetry self update <<pipeline.parameters.poetry-version>>
      - run:
          name: Install dependencies and project in dev mode
          command: poetry install
      - run:
          name: Run tests
          command: poetry run pytest

  build_and_release:
    description: Build and release new version of the package to PyPi
    executor: python310
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install Poetry
          command: poetry self update <<pipeline.parameters.poetry-version>>
      - run:
          name: Configure Poetry PyPi token
          command: |
            poetry config pypi-token.testpypi ${POETRY_PYPI_TOKEN_PYPI}
      - run:
          name: Release and Publish to PyPI
          command: |
            poetry publish --build --no-interaction

workflows:
  version: 2
  test:
    jobs:
      - lint:
          name: Run Linters
          executor_name: linters
          context: snyk-security-rnd
      - test:
          name: Run Tests - python 3.10
          executor_name: python310
          context: snyk-security-rnd
      - test:
          name: Run Tests - python 3.9
          executor_name: python39
          context: snyk-security-rnd
      - test:
          name: Run Tests - python 3.8
          executor_name: python38
          context: snyk-security-rnd
      - test:
          name: Run Tests - python 3.7
          executor_name: python37
          context: snyk-security-rnd
      - build_and_release:
          name: Build and Release a new version to PyPI
          requires:
            - Run Tests - python 3.10
            - Run Tests - python 3.9
            - Run Tests - python 3.8
            - Run Tests - python 3.7
            - Run Linters
          filters:
            branches:
              only: main
